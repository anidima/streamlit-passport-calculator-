import streamlit as st
from datetime import datetime, timedelta

def calculate_days_in_country(repatriation_date, absence_dates):
    today = datetime.today().date()
    repatriation_date = datetime.strptime(repatriation_date, "%Y-%m-%d").date()
    
    # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –≤ —Å—Ç—Ä–∞–Ω–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ª–µ—Ç
    five_years_ago = max(repatriation_date, today - timedelta(days=5*365))
    total_days = (today - five_years_ago).days
    
    # –í—ã—á–∏—Ç–∞–µ–º –¥–Ω–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ª–µ—Ç
    days_absent = 0
    for absence_start, absence_end in absence_dates:
        absence_start = datetime.strptime(absence_start, "%Y-%m-%d").date()
        absence_end = datetime.strptime(absence_end, "%Y-%m-%d").date()
        
        if absence_end >= five_years_ago:
            effective_start = max(absence_start, five_years_ago)
            days_absent += (absence_end - effective_start).days
    
    days_present = total_days - days_absent
    return days_present, total_days

def determine_passport_eligibility(days_present, total_days, repatriation_date):
    years_since_repatriation = (datetime.today().date() - repatriation_date).days / 365
    
    if years_since_repatriation < 1:
        return "‚ùå –¢–æ–ª—å–∫–æ '—Ç–µ—É–¥–∞—Ç –º–∞–∞–≤–∞—Ä' –Ω–∞ 5 –ª–µ—Ç"
    
    percentage_present = days_present / total_days if total_days > 0 else 0
    
    if 1 <= years_since_repatriation < 5:
        if percentage_present >= 0.6:
            return "‚úÖ –î–∞—Ä–∫–æ–Ω –Ω–∞ 5 –ª–µ—Ç"
        else:
            return "‚ùå –¢–æ–ª—å–∫–æ '—Ç–µ—É–¥–∞—Ç –º–∞–∞–≤–∞—Ä' –Ω–∞ 5 –ª–µ—Ç"
    
    if years_since_repatriation >= 5:
        if days_present >= 36 * 30:  # 36 –º–µ—Å—è—Ü–µ–≤ (–ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ)
            return "‚úÖ –î–∞—Ä–∫–æ–Ω –Ω–∞ 10 –ª–µ—Ç"
        elif (datetime.today().date() - timedelta(days=365)) >= repatriation_date and (days_present / 365) >= 0.6:
            return "‚úÖ –î–∞—Ä–∫–æ–Ω –Ω–∞ 5 –ª–µ—Ç (–ø–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—é)"
        else:
            return "‚ùå –¢–æ–ª—å–∫–æ '—Ç–µ—É–¥–∞—Ç –º–∞–∞–≤–∞—Ä' –Ω–∞ 5 –ª–µ—Ç"
    
    return "‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞"

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit
st.title("–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–≥—Ä–∞–Ω–ø–∞—Å–ø–æ—Ä—Ç –ò–∑—Ä–∞–∏–ª—è üáÆüá±")

# –í–≤–æ–¥ –¥–∞—Ç—ã —Ä–µ–ø–∞—Ç—Ä–∏–∞—Ü–∏–∏
repatriation_date = st.date_input("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–µ–ø–∞—Ç—Ä–∏–∞—Ü–∏–∏", min_value=datetime(2000, 1, 1))

# –í–≤–æ–¥ –¥–∞—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ª–µ—Ç
st.subheader("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –≤ —Å—Ç—Ä–∞–Ω–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ª–µ—Ç")
if "absences" not in st.session_state:
    st.session_state.absences = []

# –§–æ—Ä–º–∞ –¥–ª—è –≤–≤–æ–¥–∞ –ø–µ—Ä–∏–æ–¥–æ–≤ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è
col1, col2, col3 = st.columns(3)
with col1:
    absence_start = st.date_input("–ù–∞—á–∞–ª–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è", key="absence_start")
with col2:
    absence_end = st.date_input("–ö–æ–Ω–µ—Ü –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è", key="absence_end")
with col3:
    if st.button("–î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–∏–æ–¥"):
        if absence_start < absence_end:
            st.session_state.absences.append((str(absence_start), str(absence_end)))

# –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –ø–µ—Ä–∏–æ–¥–æ–≤ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è
if st.session_state.absences:
    st.write("–ü–µ—Ä–∏–æ–¥—ã –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è:")
    for i, (start, end) in enumerate(st.session_state.absences):
        st.write(f"{i+1}. {start} - {end}")

    if st.button("–û—á–∏—Å—Ç–∏—Ç—å –ø–µ—Ä–∏–æ–¥—ã"):
        st.session_state.absences = []

# –†–∞—Å—á–µ—Ç –¥–Ω–µ–π –≤ —Å—Ç—Ä–∞–Ω–µ –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –ø–∞—Å–ø–æ—Ä—Ç–∞
if st.button("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å"):
    days_in_country, total_days = calculate_days_in_country(str(repatriation_date), st.session_state.absences)
    eligibility = determine_passport_eligibility(days_in_country, total_days, repatriation_date)
    
    st.success(f"üìÖ –í—ã –Ω–∞—Ö–æ–¥–∏–ª–∏—Å—å –≤ —Å—Ç—Ä–∞–Ω–µ: **{days_in_country} –¥–Ω–µ–π –∏–∑ {total_days}**")
    st.info(f"üìú –í–∞—à —Å—Ç–∞—Ç—É—Å: {eligibility}")
