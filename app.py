import streamlit as st
from datetime import datetime, timedelta

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –¥–Ω–µ–π –≤ —Å—Ç—Ä–∞–Ω–µ
def calculate_days_in_country(repatriation_date, absence_dates):
    today = datetime.today().date()
    repatriation_date = datetime.strptime(repatriation_date, "%Y-%m-%d").date()

    # –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π
    total_days = (today - repatriation_date).days

    # –í—ã—á–∏—Ç–∞–µ–º –¥–Ω–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è
    for absence in absence_dates:
        absence_start = datetime.strptime(absence[0], "%Y-%m-%d").date()
        absence_end = datetime.strptime(absence[1], "%Y-%m-%d").date()
        total_days -= (absence_end - absence_start).days

    return total_days

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit
st.title("–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–Ω–µ–π –≤ —Å—Ç—Ä–∞–Ω–µ üáÆüá±")

# –í–≤–æ–¥ –¥–∞—Ç—ã —Ä–µ–ø–∞—Ç—Ä–∏–∞—Ü–∏–∏
repatriation_date = st.date_input("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–µ–ø–∞—Ç—Ä–∏–∞—Ü–∏–∏", min_value=datetime(2000, 1, 1))

# –í–≤–æ–¥ –¥–∞—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è
absence_dates = []
st.subheader("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –≤ —Å—Ç—Ä–∞–Ω–µ")
if "absences" not in st.session_state:
    st.session_state.absences = []

# –§–æ—Ä–º–∞ –¥–ª—è –≤–≤–æ–¥–∞ –ø–µ—Ä–∏–æ–¥–æ–≤ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è
col1, col2, col3 = st.columns(3)
with col1:
    absence_start = st.date_input("–ù–∞—á–∞–ª–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è", key="absence_start")
with col2:
    absence_end = st.date_input("–ö–æ–Ω–µ—Ü –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è", key="absence_end")
with col3:
    if st.button("–î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–∏–æ–¥"):
        if absence_start < absence_end:
            st.session_state.absences.append((str(absence_start), str(absence_end)))

# –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –ø–µ—Ä–∏–æ–¥–æ–≤ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è
if st.session_state.absences:
    st.write("–ü–µ—Ä–∏–æ–¥—ã –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è:")
    for i, (start, end) in enumerate(st.session_state.absences):
        st.write(f"{i+1}. {start} - {end}")

    if st.button("–û—á–∏—Å—Ç–∏—Ç—å –ø–µ—Ä–∏–æ–¥—ã"):
        st.session_state.absences = []

# –†–∞—Å—á–µ—Ç –¥–Ω–µ–π –≤ —Å—Ç—Ä–∞–Ω–µ
if st.button("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å"):
    days_in_country = calculate_days_in_country(str(repatriation_date), st.session_state.absences)
    passport_date = repatriation_date + timedelta(days=5*365)

    st.success(f"üìÖ –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Å—Ç—Ä–∞–Ω–µ: **{days_in_country} –¥–Ω–µ–π**")
    st.info(f"üìú –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–∞—è –¥–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞: **{passport_date.strftime('%Y-%m-%d')}**")
